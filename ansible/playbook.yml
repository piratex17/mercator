---
- name: Setup Mercator Environment
  hosts: all
  vars:
    domain: cartographie.learning.local
    certs_dir: "./docker-compose//PV/nginx/certs"
    nginx_conf: "./docker-compose/PV/nginx/nginx.conf"
    mercator_env: "./docker-compose/PV/env/mercator.env"
    docker_compose_file: "./docker-compose/docker-compose.yml"

  tasks:
    - name: Print env variable
      debug:
        msg: "print env variable {{ env }}"

    - name: Install required system packages (Debian/Ubuntu)
      become: yes
      package:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
      when: ansible_os_family == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Add Docker GPG key (Debian/Ubuntu)
      become: yes
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_os_family == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Add Docker repository (Debian/Ubuntu)
      become: yes
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present
      when: ansible_os_family == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Install Docker (Debian/Ubuntu)
      become: yes
      package:
        name: docker-ce
        state: present
      when: ansible_os_family == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Install pip3 (Debian/Ubuntu)
      become: yes
      package:
        name: python3-pip
        state: present
      when: ansible_os_family == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Install Docker Compose using pip3 (Debian/Ubuntu)
      become: yes
      pip:
        name: docker-compose
        executable: pip3
      when: ansible_os_family == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Create certificates directory
      file:
        path: "{{ certs_dir }}"
        state: directory
        mode: '0755'

    - name: Generate self-signed certificate
      command: >
        openssl req -x509 -nodes -days 365 -newkey rsa:2048
        -keyout "{{ certs_dir }}/{{ domain }}.key"
        -out "{{ certs_dir }}/{{ domain }}.crt"
        -subj "/CN={{ domain }}/O=CD976/L=Mamoudzou/C=YT"
      args:
        creates: "{{ certs_dir }}/{{ domain }}.crt"

    - name: Ensure nginx configuration exists
      template:
        src: templates/nginx.conf.j2
        dest: "{{ nginx_conf }}"
        mode: '0644'

    - name: Ensure environment file exists
      template:
        src: templates/mercator.env.j2
        dest: "{{ mercator_env }}"
        mode: '0644'
